# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-cloud-provider
  namespace: dubbo-demo
spec:
  replicas: 2
  selector:
    matchLabels:
      app: spring-cloud-provider
  template:
    metadata:
      labels:
        app: spring-cloud-provider
    spec:
      terminationGracePeriodSeconds: 120
      volumes:
        - name: skywalking-agent
          emptyDir: { }
      initContainers:
        - name: agent-container
          image: apache/skywalking-java-agent:8.13.0-alpine
          volumeMounts:
            - name: skywalking-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cp -R /skywalking/agent /agent/" ]
      containers:
        - name: server
          image: 192.168.172.113:8080/spring-cloud-provider:v1.0
          imagePullPolicy: Always
          ports:
            - containerPort: 6660
          volumeMounts:
            - name: skywalking-agent
              mountPath: /skywalking
          env:
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/skywalking/agent/skywalking-agent.jar"
            - name: SW_AGENT_NAME
              value: spring-cloud-provider
            - name: SW_AGENT_COLLECTOR_BACKEND_SERVICES
              value: 192.168.172.113:11800
            - name: TZ
              value: Asia/Shanghai
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "curl -X POST 'http://localhost:6660/nacos/stop' && sleep 100 && PID=`pidof java` && kill -SIGTERM $PID && while ps -p $PID > /dev/null; do sleep 1; done;"]
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 6660
#            initialDelaySeconds: 5
#            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 6660
#            initialDelaySeconds: 5
#            periodSeconds: 5
          startupProbe:
            httpGet:
              path: /actuator/health
              port: 6660
#            failureThreshold: 30
#            periodSeconds: 10
