server:
  port: 6660
   
spring:   
  profiles:
    active: dev
    #includ中,nacos的配置文件对应 starex-mysql, starex-swagger2
    include: 
  main:
    allow-bean-definition-overriding: true
  application:
    name: springCloud-k8s-provider-app
  cloud:
# 开启resilience4j熔断器
    circuitbreaker:
      resilience4j:
        enabled: true
# loadbalancer
    loadbalancer:
      enabled: true
      retry: #需要引入Spring Retry依赖
        #该参数用来开启重试机制，默认是关闭
        enabled: true
        #切换实例的重试次数
        max-retries-on-next-service-instance: 2
        #对当前实例重试的次数
        max-retries-on-same-service-instance: 0
        #对所有的操作请求都进行重试
        retry-on-all-operations: true
        #Http响应码进行重试
#        retryable-status-codes: 500,404,502
      clients:
        default:
          retry:
            enabled: true
            retryOnAllOperations: true
            maxRetriesOnSameServiceInstance: 0
            maxRetriesOnNextServiceInstance: 2
# nacos configuration
    nacos:
      discovery: 
        # 服务注册地址
        # k8s service address
        #server-addr: nacos.dubbo-demo.svc:8848
        # ip address
        server-addr: 192.168.110.2:8848
        # 注册命名空间
        # k8s nacos namespace
        #namespace: springCloud-k8s
        # ip nacos namespace
        namespace: 7bd95871-2bc6-49ce-a93f-b65d7650f5cb
        username: nacos
        password: nacos
        metadata: 
          preserved.heart.beat.interval: 3000
          preserved.heart.beat.timeout: 6000
          preserved.ip.delete.timeout: 6000
      config:
        # 配置中心地址
        # k8s service address
        #server-addr: nacos.dubbo-demo.svc:8848
        # ip address
        server-addr: 192.168.110.2:8848
        # 服务命名空间
        # k8s nacos namespace
        #namespace: springCloud-k8s
        # ip nacos namespace
        namespace: 7bd95871-2bc6-49ce-a93f-b65d7650f5cb
        username: nacos
        password: nacos
        # 配置文件格式
        file-extension: yaml
        prefix: springCloud-k8s
# redis configuration
#  redis:
#    database: 0
#    host: 127.0.0.1
#    password: 
#    port: 6379
#    timeout: 10000
#    jedis:
#      pool:
#        max-active: 100
#        max-idle: 10
#        min-idle: 1
#        max-wait: 30000

# eureka configuration
#eureka:
#  instance:
#    prefer-ip-address: true 
#  client:
#    service-url:
#      defaultZone: http://192.168.110.2:9500/eureka/

# log configuration   
logging:
  level:
    root: info
    
# swagger configuration
swagger:
  base-package: com.springCloud.k8s
  
# feign
feign:
  circuitbreaker:
    enabled: true
#  client:
#    config:
#      default:
#        connectTimeout: 1000
#        readTimeout: 2000

# feign-reactor        
reactive:
  feign:
    loadbalancer:
      enabled: true
    circuit:
      breaker:
        enabled: true
    client:
      config:
        default:
          options:
            readTimeoutMillis: 2000
            writeTimeoutMillis: 2000
            connectTimeoutMillis: 1000
          retryOnSame:
            builder: reactivefeign.retry.BasicReactiveRetryPolicy.Builder 
            args:
              maxRetries: 0
              backoffInMs: 10
          retryOnNext:
            builder: reactivefeign.retry.BasicReactiveRetryPolicy.Builder
            args:
              maxRetries: 2
              backoffInMs: 10

# resilience4j
resilience4j:
  circuitbreaker:
    configs:
      default:
        #以百分⽐配置失败率阈值。当失败率等于或⼤于阈值时，断路器状态并关闭变为开启，并进⾏服务降级。
        failureRateThreshold: 50
        #以百分⽐的⽅式配置，断路器把调⽤时间⼤于slowCallDurationThreshold的调⽤视为慢调⽤，当慢调⽤⽐例⼤于等于阈值时，断路器开启，并进⾏服务降级。
        slowCallRateThreshold: 90
        #配置调⽤时间的阈值，⾼于该阈值的呼叫视为慢调⽤，并增加慢调⽤⽐例。
        slowCallDurationThreshold: 100000
        #断路器在半开状态下允许通过的调⽤次数。
        permittedNumberOfCallsInHalfOpenState: 5
        #断路器在半开状态下的最⻓等待时间，超过该配置值的话，断路器会从半开状态恢复为开启状态。配置是0时表示断路器会⼀直处于半开状态，直到所有允许通过的访问结束。
        maxWaitDurationInHalfOpenState: 600000
        #配置滑动窗⼝的类型，当断路器关闭时，将调⽤的结果记录在滑动窗⼝中。滑动窗⼝的类型可以是count-based或time-based。如果滑动窗⼝类型是COUNT_BASED，将会统计记录最近slidingWindowSize次调⽤的结果。如果是TIME_BASED，将会统计记录最近 slidingWindowSize秒的调⽤结果。
        slidingWindowType: COUNT_BASED
        #配置滑动窗⼝的⼤⼩。
        slidingWindowSize: 100
        #断路器计算失败率或慢调⽤率之前所需的最⼩调⽤数（每个滑动窗⼝周期）。例如，如果minimumNumberOfCalls为10，则必须⾄少记录10个调⽤，然后才能计算失败率。如果只记录了9次调⽤，即使所有9次调⽤都失败，断路器也不会开启。
        minimumNumberOfCalls: 5
        #断路器从开启过渡到半开应等待的时间。
        waitDurationInOpenState: 60000
        #不开启监视线程
        automaticTransitionFromOpenToHalfOpenEnabled: false
    instances:
      tools:
        registerHealthIndicator: true
        baseConfig: default
        minimumNumberOfCalls: 3
        slowCallDurationThreshold: 2000
        permittedNumberOfCallsInHalfOpenState: 1
  #超时配置
  timelimiter:
    configs:
      default:
        #超时时间
        timeoutDuration: 10000
    instances:
      tools:
        timeoutDuration: 2s

# feign
#feign:
#  hystrix:
#    enabled: true

# 设置ribbon负载均衡器
    
ribbon:
# 设置连接超时时间
 ConnectTimeout: 2000
# 设置读取超时时间
 ReadTimeout: 10000
# 是否对所有的请求方式都重试，只对get请求重试
 OkToRetryOnAllOperations: false
# 切换实例的重试次数
 MaxAutoRetriesNextServer: 2
# 对当前实例的重试次数
 MaxAutoRetries: 1
 
# 设置hystrix熔断超时时间
hystrix:
 command:
  default:
   execution:
    isolation:
     thread:
      timeoutInMilliseconds: 10000
# 开启熔断功能
    timeout:
     enabled: true
 threadpool:
  default:
   coreSize: 10
   maximumSize: 20
   allowMaximumSizeToDivergeFromCoreSize: true
   maxQueueSize: -1
   
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS  
   